!function(){"use strict";class e{constructor(e){this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".modal__close-button")}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("click",(e=>{e.target===this._popup&&this.close()}))}}class t extends e{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".modal__form")}_getInputValues(){const e={};return[...this._form.querySelectorAll(".modal__input")].forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())}))}close(){super.close(),this._form.reset()}}const s={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class n{constructor(e,t){this._settings=e,this._formEl=t,this.inputElms=[...this._formEl.querySelectorAll(e.inputSelector)],this.submitButton=this._formEl.querySelector(e.submitButtonSelector)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){return e.validity.valid?(this._hideInputError(e),!0):(this._showInputError(e),!1)}toggleButtonState(){this._checkFormValidity()?(this.submitButton.classList.remove(this._settings.inactiveButtonClass),this.submitButton.removeAttribute("disabled")):(this.submitButton.classList.add(this._settings.inactiveButtonClass),this.submitButton.setAttribute("disabled",!0))}_checkFormValidity(){return this.inputElms.every((e=>e.validity.valid))}_setEventListeners(){this.inputElms.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>e.preventDefault())),this._setEventListeners(),this.toggleButtonState()}resetValidation(){this.inputElms.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}}class o{constructor(e,t,s){let{name:n,link:o,alt:r}=e;this._name=n,this._link=o,this._alt=r,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._link,this._alt,this._name)}))}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}getView(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector(".card__image"),t=this._cardElement.querySelector(".card__text");return e.setAttribute("src",this._link),e.setAttribute("alt",this._alt),t.textContent=this._name,this._setEventListeners(),this._cardElement}}const r=document.querySelector(".profile__edit-button"),i=(document.querySelector(".profile__name"),document.querySelector(".profile__description"),document.querySelector(".profile__add-button")),a=(e,t,s)=>{_.open({link:e,alt:t,name:s})},l=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}}({nameSelector:".profile__name",jobSelector:".profile__description"}),c=e=>{const t=new o(e,"#card-template",a).getView();u.addItem(t)},u=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"A picture of Yosemite Valley"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"A picture of Lake Louise"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"A picture of the Bald Mountians"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"A picture of Latemar"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg",alt:"A picture of the Vanoise National Park"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg",alt:"A picture of Lago di Braies"}].reverse(),renderer:c},".cards__list");u.renderItems();const d=new t("#modal-add-card",(e=>{c({name:e.title,link:e.url,alt:e.title}),d.close()}));d.setEventListeners();const m=new t("#modal-edit-profile",(e=>{l.setUserInfo(e.name,e.description),m.close()}));m.setEventListeners();const _=new class extends e{constructor(e){super(e),this._modalImage=this._popup.querySelector(".modal__card_image"),this._modalFooter=this._popup.querySelector(".modal__image_footer")}open(e){let{link:t,alt:s,name:n}=e;this._modalImage.src=t,this._modalImage.alt=s,this._modalFooter.textContent=n,super.open()}}("#modal-image-inspect");_.setEventListeners();const h=document.querySelector("#profile-name-input"),p=document.querySelector("#profile-description-input");r.addEventListener("click",(()=>{const e=l.getUserInfo();h.value=e.name,p.value=e.job,m.open()}));const E=new n(s,document.querySelector("#modal-add-card .modal__form"));E.enableValidation(),i.addEventListener("click",(()=>{E.toggleButtonState(),d.open()})),document.querySelectorAll(s.formSelector).forEach((e=>{new n(s,e).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,